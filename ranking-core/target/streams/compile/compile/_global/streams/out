[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:8:14: Top-level wildcard is not allowed
[warn]   def number[_: P]: P[Number] = P(
[warn]              ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:13:16: Top-level wildcard is not allowed
[warn]   def variable[_: P]: P[Variable] = P(
[warn]                ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:17:20: Top-level wildcard is not allowed
[warn]   def functionCall[_: P]: P[FunctionCall] = P(
[warn]                    ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:21:14: Top-level wildcard is not allowed
[warn]   def factor[_: P]: P[Expr] = P(
[warn]              ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:28:13: Top-level wildcard is not allowed
[warn]   def unary[_: P]: P[Expr] = P(
[warn]             ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:33:13: Top-level wildcard is not allowed
[warn]   def power[_: P]: P[Expr] = P(
[warn]             ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:39:12: Top-level wildcard is not allowed
[warn]   def term[_: P]: P[Expr] = P(
[warn]            ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:45:18: Top-level wildcard is not allowed
[warn]   def expression[_: P]: P[Expr] = P(
[warn]                  ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/ExpressionParser.scala:51:23: Top-level wildcard is not allowed
[warn]   def parseExpression[_: P]: P[Expr] = P(Start ~ " ".rep ~ expression ~ " ".rep ~ End)
[warn]                       ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/com/example/ranking/core/RankingEngine.scala:3:23: Unused import
[warn] import cats.implicits._
[warn]                       ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/ExperimentDemo.scala:92:53: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,
[warn] or use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.
[warn]           println(s"     Score: ${scoredOffer.score.formatted("%.2f")}")
[warn]                                                     ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/ExperimentDemo.scala:124:109: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,
[warn] or use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.
[warn]         println(s"$userId -> Experiment: $experimentInfo, Top Offer: ${topOffer.offer.id} (${topOffer.score.formatted("%.2f")})")
[warn]                                                                                                             ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/RankerDemo.scala:87:73: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,
[warn] or use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.
[warn]         println(s"${index + 1}. ${offer.id} (Score: ${scoredOffer.score.formatted("%.2f")})")
[warn]                                                                         ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/RankerDemo.scala:111:88: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,
[warn] or use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.
[warn]         println(s"  ${index + 1}. ${scoredOffer.offer.id} - Score: ${scoredOffer.score.formatted("%.2f")}")
[warn]                                                                                        ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/SimpleRankerDemo.scala:51:49: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,
[warn] or use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.
[warn]         println(s"   Score: ${scoredOffer.score.formatted("%.2f")}")
[warn]                                                 ^
[warn] /Users/basila/Documents/Develop/ranking-engine/ranking-core/src/main/scala/SimpleRankerDemo.scala:74:61: method formatted in class StringFormat is deprecated (since 2.12.16): Use `formatString.format(value)` instead of `value.formatted(formatString)`,
[warn] or use the `f""` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.
[warn]       case Right(result) => println(s"  $formula = ${result.formatted("%.3f")}")
[warn]                                                             ^
[warn] 16 warnings found
